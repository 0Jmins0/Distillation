/home/xyzhang/project/Distillation/src/models/Students/MVAlexNet.py:115: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(model_path, map_location=torch.device("cuda" if torch.cuda.is_available() else "cpu"))
/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.
  warnings.warn(msg)
Using device: cuda
loading train data.......
finished loading train data.......
Training MV_AlexNet_dis_Pre

init ALEXNET model...

Loading pre-trained model from /home/xyzhang/project/Distillation/models/train_models/OS-ABO-core/MV_AlexNet/epochs_14_lr_1e-06_batch_8.pth...
Pre-trained features loaded successfully.
No saved model found. Starting training from scratch.
before train
Epoch 1/15:   0%|          | 0/136 [00:00<?, ?batch/s]Epoch 1/15:   0%|          | 0/136 [00:00<?, ?batch/s]
Traceback (most recent call last):
  File "/home/xyzhang/project/Distillation/src/train.py", line 180, in <module>
    t_negative_features = model_T(negative_images)
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/xyzhang/project/Distillation/src/models/Teachers/CLIP.py", line 42, in forward
    clip_output = self.clip_model(x)
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/transformers/models/clip/modeling_clip.py", line 1170, in forward
    return self.vision_model(
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/transformers/models/clip/modeling_clip.py", line 1096, in forward
    encoder_outputs = self.encoder(
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/transformers/models/clip/modeling_clip.py", line 876, in forward
    layer_outputs = encoder_layer(
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/transformers/models/clip/modeling_clip.py", line 618, in forward
    hidden_states = residual + hidden_states
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 16.00 MiB. GPU 0 has a total capacity of 23.69 GiB of which 19.12 MiB is free. Process 51967 has 7.98 GiB memory in use. Process 89155 has 7.09 GiB memory in use. Process 89322 has 364.00 MiB memory in use. Including non-PyTorch memory, this process has 8.23 GiB memory in use. Of the allocated memory 7.90 GiB is allocated by PyTorch, and 26.08 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
/home/xyzhang/project/Distillation/src/models/Students/MVAlexNet.py:115: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(model_path, map_location=torch.device("cuda" if torch.cuda.is_available() else "cpu"))
/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.
  warnings.warn(msg)
Using device: cuda
loading train data.......
finished loading train data.......
Training MV_AlexNet_dis_Pre

init ALEXNET model...

Loading pre-trained model from /home/xyzhang/project/Distillation/models/train_models/OS-ABO-core/MV_AlexNet/epochs_14_lr_1e-06_batch_8.pth...
Pre-trained features loaded successfully.
No saved model found. Starting training from scratch.
before train
Epoch 1/15:   0%|          | 0/136 [00:00<?, ?batch/s]Epoch 1/15:   0%|          | 0/136 [00:00<?, ?batch/s]
Traceback (most recent call last):
  File "/home/xyzhang/project/Distillation/src/train.py", line 180, in <module>
    t_negative_features = model_T(negative_images)
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/xyzhang/project/Distillation/src/models/Teachers/CLIP.py", line 42, in forward
    clip_output = self.clip_model(x)
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/transformers/models/clip/modeling_clip.py", line 1170, in forward
    return self.vision_model(
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/transformers/models/clip/modeling_clip.py", line 1096, in forward
    encoder_outputs = self.encoder(
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/transformers/models/clip/modeling_clip.py", line 876, in forward
    layer_outputs = encoder_layer(
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/xyzhang/anaconda3/envs/Distillation/lib/python3.9/site-packages/transformers/models/clip/modeling_clip.py", line 618, in forward
    hidden_states = residual + hidden_states
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 16.00 MiB. GPU 0 has a total capacity of 23.69 GiB of which 19.12 MiB is free. Process 51967 has 7.98 GiB memory in use. Process 89155 has 7.09 GiB memory in use. Process 89322 has 364.00 MiB memory in use. Including non-PyTorch memory, this process has 8.23 GiB memory in use. Of the allocated memory 7.90 GiB is allocated by PyTorch, and 26.08 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
